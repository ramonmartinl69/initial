<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.myorg.initial.roo.ui</groupId>
		<artifactId>initial-ui</artifactId>
		<version>0.1.0.BUILD-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>org.myorg.initial.roo.ui.web.jsf</groupId>
    <artifactId>initial-jsf</artifactId>
    <packaging>war</packaging>
    <version>0.1.0.BUILD-SNAPSHOT</version>
    <name>initial-jsf</name>
    <properties>
<!--         <aspectj.version>1.7.4</aspectj.version> -->
<!--         <java.version>7</java.version> -->
<!--         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> -->
<!--         <roo.version>1.2.5.RELEASE</roo.version> -->
<!--         <slf4j.version>1.7.5</slf4j.version> -->
<!--         <spring.version>3.2.6.RELEASE</spring.version> -->
    </properties>
    <repositories>
<!--         <repository> -->
<!--             <id>spring-maven-release</id> -->
<!--             <name>Spring Maven Release Repository</name> -->
<!--             <url>http://maven.springframework.org/release</url> -->
<!--         </repository> -->
<!--         <repository> -->
<!--             <id>spring-maven-milestone</id> -->
<!--             <name>Spring Maven Milestone Repository</name> -->
<!--             <url>http://maven.springframework.org/milestone</url> -->
<!--         </repository> -->
<!--         <repository> -->
<!--             <id>spring-roo-repository</id> -->
<!--             <name>Spring Roo Repository</name> -->
<!--             <url>http://spring-roo-repository.springsource.org/release</url> -->
<!--         </repository> -->
    	<repository>
            <id>java.net.m2</id>
            <url>http://download.java.net/maven/2</url>
        </repository>
        <!-- For 3.5 and older -->  
        <repository>
            <id>prime-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>http://repository.primefaces.org</url>
		    <layout>default</layout>  
        </repository>
    </repositories>
    <pluginRepositories>
<!--         <pluginRepository> -->
<!--             <id>spring-maven-release</id> -->
<!--             <name>Spring Maven Release Repository</name> -->
<!--             <url>http://maven.springframework.org/release</url> -->
<!--         </pluginRepository> -->
<!--         <pluginRepository> -->
<!--             <id>spring-maven-milestone</id> -->
<!--             <name>Spring Maven Milestone Repository</name> -->
<!--             <url>http://maven.springframework.org/milestone</url> -->
<!--         </pluginRepository> -->
<!--         <pluginRepository> -->
<!--             <id>spring-roo-repository</id> -->
<!--             <name>Spring Roo Repository</name> -->
<!--             <url>http://spring-roo-repository.springsource.org/release</url> -->
<!--         </pluginRepository> -->
    </pluginRepositories>
    <dependencies>
    	<!-- Modules -->
        <dependency>
            <groupId>org.myorg.initial.roo.core</groupId>
            <artifactId>initial-core</artifactId>
            <version>0.1.0.BUILD-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.myorg.initial.roo.business</groupId>
            <artifactId>initial-business</artifactId>
            <version>0.1.0.BUILD-SNAPSHOT</version>
        </dependency>
        <!-- General dependencies for standard applications -->
<!--         <dependency> -->
<!--             <groupId>junit</groupId> -->
<!--             <artifactId>junit</artifactId> -->
<!--             <version>4.11</version> -->
<!--             <scope>test</scope> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>log4j</groupId> -->
<!--             <artifactId>log4j</artifactId> -->
<!--             <version>1.2.17</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.slf4j</groupId> -->
<!--             <artifactId>slf4j-api</artifactId> -->
<!--             <version>${slf4j.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.slf4j</groupId> -->
<!--             <artifactId>jcl-over-slf4j</artifactId> -->
<!--             <version>${slf4j.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.slf4j</groupId> -->
<!--             <artifactId>slf4j-log4j12</artifactId> -->
<!--             <version>${slf4j.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.aspectj</groupId> -->
<!--             <artifactId>aspectjrt</artifactId> -->
<!--             <version>${aspectj.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.aspectj</groupId> -->
<!--             <artifactId>aspectjweaver</artifactId> -->
<!--             <version>${aspectj.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>javax.servlet</groupId> -->
<!--             <artifactId>servlet-api</artifactId> -->
<!--             <version>2.5</version> -->
<!--             <scope>provided</scope> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>net.sf.flexjson</groupId> -->
<!--             <artifactId>flexjson</artifactId> -->
<!--             <version>2.1</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.apache.commons</groupId> -->
<!--             <artifactId>commons-lang3</artifactId> -->
<!--             <version>3.1</version> -->
<!--         </dependency> -->
<!--         ROO dependencies -->
<!--         <dependency> -->
<!--             <groupId>org.springframework.roo</groupId> -->
<!--             <artifactId>org.springframework.roo.annotations</artifactId> -->
<!--             <version>${roo.version}</version> -->
<!--             <scope>provided</scope> -->
<!--         </dependency> -->
        <!-- Spring dependencies -->
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-core</artifactId> -->
<!--             <version>${spring.version}</version> -->
<!--             <exclusions> -->
<!--                 <exclusion> -->
<!--                     <groupId>commons-logging</groupId> -->
<!--                     <artifactId>commons-logging</artifactId> -->
<!--                 </exclusion> -->
<!--             </exclusions> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-test</artifactId> -->
<!--             <version>${spring.version}</version> -->
<!--             <scope>test</scope> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-context</artifactId> -->
<!--             <version>${spring.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-aop</artifactId> -->
<!--             <version>${spring.version}</version> -->
<!--         </dependency> -->
<!--         <dependency> -->
<!--             <groupId>org.springframework</groupId> -->
<!--             <artifactId>spring-aspects</artifactId> -->
<!--             <version>${spring.version}</version> -->
<!--         </dependency> -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>3.5</version>
<!-- 			<version>5.1</version> -->
        </dependency>
        <dependency>
        	<groupId>org.primefaces.themes</groupId>
<!--             <groupId>org.primefaces.extensions</groupId> -->
            <artifactId>south-street</artifactId>
<!-- 			<artifactId>all-themes</artifactId> -->
            <version>1.0.10</version>
<!--             <version>1.0.8</version> -->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>2.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
            <version>2.1.10</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <!-- <configuration> <webXml>target/web.xml</webXml> </configuration> -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <dependencies>
                    <!-- NB: You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outxml>true</outxml>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--
                      Aspects in src/main/java and src/main/aspects are added 
                      as default in the compile goal.
                      Aspects in src/test/java and src/test/aspects are added 
                      as default in the test-compile goal.
                      Aspects in src/main/java are added in the test-compile 
                      goal if weaveWithAspectsInMainSourceFolder is set to true
                    -->
                    <weaveWithAspectsInMainSourceFolder>false</weaveWithAspectsInMainSourceFolder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <printSummary>false</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <excludes>
                        <exclude>**/*_Roo_*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <!-- IDE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <!-- Note 2.8 does not work with AspectJ aspect path -->
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                    <wtpversion>2.0</wtpversion>
                    <additionalBuildcommands>
                        <buildCommand>
                            <name>org.eclipse.ajdt.core.ajbuilder</name>
                            <arguments>
                                <aspectPath>org.springframework.aspects</aspectPath>
                            </arguments>
                        </buildCommand>
                        <buildCommand>
                            <name>org.springframework.ide.eclipse.core.springbuilder</name>
                        </buildCommand>
                    </additionalBuildcommands>
                    <additionalProjectnatures>
                        <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
                        <projectnature>com.springsource.sts.roo.core.nature</projectnature>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.4.v20120524</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/${project.name}</contextPath>
                    </webAppConfig>
                </configuration>
            </plugin>
            <!-- DBUnit -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<configuration>
					<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
					<driver>${jdbc.driverClassName}</driver>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<!-- Dataset file format type. Valid types are: flat, xml, csv, and dtd -->
<!-- 					<src>src/main/resources/default-data.xml</src> -->
<!-- 					<format>xml</format> -->
<!-- 					<src>src/main/resources/default-flat-data.xml</src> -->
<!-- 					<format>flat</format> -->
					<src>src/main/resources/</src>
					<format>csv</format>
					<!-- Clear All Data before inserting them -->
					<type>CLEAN_INSERT</type>
					<schema>${dbunit.schema}</schema>
					<skip>${skipTests}</skip>
					<transaction>true</transaction>
				</configuration>
				<executions>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
					<execution>
						<!-- Runs before integration tests and jetty:run-war -->
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<!-- Fails in Spring Roo shell -->
<!-- 						<groupId>${jdbc.groupId}</groupId> -->
<!-- 						<artifactId>${jdbc.artifactId}</artifactId> -->
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
            <!-- Selenium Plugin Fixed with update from version 2.25 to version 2.44.0 -->
        	<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>selenium-maven-plugin</artifactId>
                <version>2.3</version>
                <configuration>
	                <browser>*firefox</browser>
	                <suite>src/main/webapp/selenium/test-suite.xhtml</suite>
	                <results>${project.build.directory}/selenium.html</results>
	                <startURL>http://localhost:4444/</startURL>
            	</configuration>
                <dependencies>
                	<!-- Selenium Server -->
                    <dependency>
                        <groupId>org.seleniumhq.selenium</groupId>
                        <artifactId>selenium-server</artifactId>
<!--                         <version>2.25.0</version> -->
						<version>2.44.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
    	<!-- Profile to run selenium tests mvn test -P selenium, You need to start the application first -->
      <id>selenium</id>
      <build>
		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <printSummary>false</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <excludes>
                        <exclude>**/*_Roo_*</exclude>
                        <!-- Exclude Selenium Tests -->
                        <exclude>**/*Selenium*</exclude>
                    </excludes>
                </configuration>
                <!-- Execute Selenium Tests in the integration phase and Start Jetty Before with the plugin -->
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<excludes>
	                        	<exclude>**/*_Roo_*</exclude>
	                    	</excludes>
						</configuration>
					</execution>
				</executions>
            </plugin>
            <plugin>
		        <artifactId>maven-failsafe-plugin</artifactId>
		        <version>2.6</version>
		        <configuration>
		          <skipTests>false</skipTests>
		        </configuration>
		        <executions>
		          <execution>
		            <goals>
		              <goal>integration-test</goal>
		              <goal>verify</goal>
		            </goals>
		          </execution>
		        </executions>
		      </plugin>
		   	<!-- Start Jetty Before integration-test phase for testing Selenium -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.25</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopPort>9999</stopPort>
					<stopKey>STOP</stopKey>
					<contextPath>/${project.name}</contextPath>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
      </build>
    </profile>
        <!-- ================= Development Settings Profile ================= -->
        <!-- Use "-P dev" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
        <profile>
            <id>dev</id>
            <properties>
				<app.deploymentEnvironment>development</app.deploymentEnvironment>
			</properties>
            <build>
            	<!-- Name of the generated Artifact -->
            	<finalName>${artifactId}-${app.deploymentEnvironment}-${version}</finalName>
                <plugins>
                    <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <configuration>
                            <src>src/main/resources/</src>
		                    <format>csv</format>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- ================= Pre-Production Settings Profile ================= -->
        <!-- Use "-P pre" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
        <profile>
            <id>pre</id>
            <properties>
				<app.deploymentEnvironment>preproduction</app.deploymentEnvironment>
			</properties>
            <build>
            	<!-- Name of the generated Artifact -->
            	<finalName>${artifactId}-${app.deploymentEnvironment}-${version}</finalName>
                <plugins>
                    <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <configuration>
                            <src>src/main/resources/</src>
		                    <format>csv</format>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- ================= Production Settings Profile ================= -->
        <!-- Use "-P prod" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
        <profile>
            <id>prod</id>
            <properties>
				<app.deploymentEnvironment>production</app.deploymentEnvironment>
			</properties>
            <build>
            	<!-- Name of the generated Artifact -->
            	<finalName>${artifactId}-${app.deploymentEnvironment}-${version}</finalName>
                <plugins>
                    <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <configuration>
                            <src>src/main/resources/</src>
		                    <format>csv</format>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
  </profiles>
</project>
